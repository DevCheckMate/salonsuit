"""criacao_das_tabelas_iniciais_users_e_user_groups

Revision ID: 87c9e1a4230a
Revises: 2a00ef078ca5
Create Date: 2024-12-16 15:46:30.966383

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87c9e1a4230a'
down_revision: Union[str, None] = '2a00ef078ca5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status',
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('status_id')
    )
    op.create_table('user_group',
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('user_group_name', sa.String(length=100), nullable=False),
    sa.Column('user_group_created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_group_updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_group_deleted_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_group_id')
    )
    op.create_table('service_category',
    sa.Column('service_category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ),
    sa.PrimaryKeyConstraint('service_category_id')
    )
    op.create_table('users',
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.Column('users_email', sa.String(length=255), nullable=True),
    sa.Column('users_name', sa.String(length=100), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('users_cellphone', sa.String(length=11), nullable=False),
    sa.Column('users_pin', sa.String(length=11), nullable=False),
    sa.Column('users_password', sa.String(length=255), nullable=False),
    sa.Column('users_birthdate', sa.Date(), nullable=True),
    sa.Column('users_instagram', sa.String(length=100), nullable=True),
    sa.Column('users_gender', sa.String(length=6), nullable=True),
    sa.Column('users_description', sa.String(length=255), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('users_image_url', sa.String(length=255), nullable=True),
    sa.Column('users_created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('users_update_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('users_deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.user_group_id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ),
    sa.PrimaryKeyConstraint('users_id')
    )
    op.create_table('service',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('service_category_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['service_category_id'], ['service_category.service_category_id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service')
    op.drop_table('users')
    op.drop_table('service_category')
    op.drop_table('user_group')
    op.drop_table('status')
    # ### end Alembic commands ###
